#!/bin/sh
# Copyright (C) 2012  Glen Pitt-Pladdy
#
# This program is free software; you can redistribute it and/or
# modify it under the terms of the GNU General Public License
# as published by the Free Software Foundation; either version 2
# of the License, or (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.
#
#
# See: https://www.pitt-pladdy.com/blog/_20091031-144604_0000_SMART_stats_on_Cacti_via_SNMP_/
#
# Version 20230630


# where to keep the files
STORE=/var/local/snmp
PREFIX=smart-
# what drive pattern to look for
DRIVEPATTERN=/dev/sd


# update smart parameters from a fixed list - this is needed if device order may change
# if this is non-empty we will only check these devices, else we scan all $DRIVEPATTERN devices
#SMARTLIST="
#	/dev/disk/by-id/ata-ST3000DM001-...
#	/dev/disk/by-id/ata-ST3000DM001-...
#	/dev/disk/by-id/ata-ST3000DM001-...
#	/dev/disk/by-id/ata-ST3000DM001-...
#	/dev/disk/by-id/ata-ST3000DM001-...
#	/dev/disk/by-id/ata-ST3000DM001-...
#	/dev/disk/by-id/ata-Samsung_SSD_840_EVO_250GB_...
#	/dev/disk/by-id/ata-Samsung_SSD_840_EVO_250GB_...
#	/dev/disk/by-id/ata-Samsung_SSD_840_EVO_250GB_...
#"

# update smart parameters
if [ -z "$SMARTLIST" ]; then
	# Scan for all $DRIVEPATTERN devices
	list="a b c d e f g h i j k l m n o p q r s t u v w x y z"
	last=`ls ${DRIVEPATTERN}[a-z] ${DRIVEPATTERN}[a-z][a-z] 2>/dev/null | tail -n1`
	for dl1 in "" $list; do
		for dl2 in $list; do
			drive=$DRIVEPATTERN$dl1$dl2
			dev=`basename $drive`
			if [ -b $drive ]; then
				# capture SMART info
				/usr/sbin/smartctl --nocheck=idle --all --json=o $drive >$STORE/TMP.$PREFIX$dev.json
			else
				# make an empty file to keep order
				touch $STORE/TMP.$PREFIX$dev.json
			fi
			mv $STORE/TMP.$PREFIX$dev.json $STORE/$PREFIX$dev.json
			[ $drive = $last ] && exit 0
		done
	done
else
	# go through our $SMARTLIST one by one
	counter=0
	for devfull in $SMARTLIST; do
		dev=`basename $devfull`
		dev=`printf "%03d-%s" $counter "$dev"`
		counter=$(($counter+1))
		if [ -b $devfull ]; then
			# device exists
			/usr/sbin/smartctl --nocheck=idle --all --json=o $devfull >$STORE/TMP.$PREFIX$dev.json
		else
			# no device - create placeholder file
			touch $STORE/TMP.$PREFIX$dev.json
		fi
		mv $STORE/TMP.$PREFIX$dev.json $STORE/$PREFIX$dev.json
	done
fi


